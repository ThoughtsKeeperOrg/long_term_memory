# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"


default: &default
  adapter:  postgresql
  encoding: utf8
  pool:     5
  # url:     <%= ENV.fetch("DB_URL", "postgresql://postgres:postgres@localhost/ltm") %>
  host:     <%= ENV.fetch("DB_HOST", "localhost") %>
  port:     <%= ENV.fetch("DB_PORT", "5432") %>
  database: <%= ENV.fetch("DB_NAME", "ltm") %>
  username: <%= ENV.fetch("DB_USERNAME", "postgres") %>
  password: <%= ENV.fetch("DB_PASSWORD", "postgres") %>

development:
  <<: *default
  # database: ltm_development


test:
  <<: *default
  database: ltm_test

production:
  <<: *default
  # database: ltm_production

#
# default: &default
#   adapter: sqlite3
#   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
#   timeout: 5000

# development:
#   <<: *default
#   database: storage/development.sqlite3

# # Warning: The database defined as "test" will be erased and
# # re-generated from your development database when you run "rake".
# # Do not set this db to the same as development or production.
# test:
#   <<: *default
#   database: storage/test.sqlite3


# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.
production:
  primary:
    <<: *default
    database: ltm_production
  cache:
    <<: *default
    database: ltm_production_cache
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: ltm_production_queue
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: ltm_production_cable
    migrations_paths: db/cable_migrate

